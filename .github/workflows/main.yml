  name: SI-CRM

  on:
    pull_request:
      branches:
        - '**'

  jobs:
    # composer-pkg-updates:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout code
    #       uses: actions/checkout@v4

    #     - name: Set up PHP
    #       uses: shivammathur/setup-php@v2
    #       with:
    #         php-version: 8.2
    #         extensions: mbstring, intl, pdo, pdo_mysql, xdebug
    #         coverage: xdebug

    #     - name: Copy .env.example to .env
    #       run: | 
    #         cd api 
    #         cp .env.example .env

    #     - name: Install Composer dependencies
    #       run: | 
    #         cd api
    #         composer install --prefer-dist --no-progress --no-suggest

    #     - name: Check which packages could be updated
    #       run: |
    #         cd api
    #         echo "Checking for outdated dependencies..."
    #         composer outdated --strict --direct --locked || true
    # composer-validate:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout code
    #       uses: actions/checkout@v4

    #     - name: Set up PHP
    #       uses: shivammathur/setup-php@v2
    #       with:
    #         php-version: 8.2
    #         extensions: mbstring, intl, pdo, pdo_mysql, xdebug
    #         coverage: xdebug

    #     - name: Copy .env.example to .env
    #       run: |
    #         cd api
    #         cp .env.example .env

    #     - name: Install Composer dependencies
    #       run: |
    #         cd api
    #         composer install --prefer-dist --no-progress --no-suggest

    #     - name: Running Composer Validate
    #       run: |
    #         cd api
    #         composer validate
            
    # environment:
    #   runs-on: ubuntu-latest

    #   steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4

    #   - name: Set up PHP
    #     uses: shivammathur/setup-php@v2
    #     with:
    #       php-version: 8.2
    #       extensions: mbstring, intl, pdo, pdo_mysql, xdebug
    #       coverage: xdebug

    #   - name: Copy .env.example to .env
    #     run: |
    #       cd api
    #       cp .env.example .env

    #   - name: Install Composer dependencies
    #     run: |
    #       cd api
    #       composer install --prefer-dist --no-progress --no-suggest

    unit-tests:
      runs-on: ubuntu-latest
      # needs:
      #   - environment

      services:
        mysql:
          image: mysql:8.0
          ports:
            - 3306:3306
          env:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_ROOT_USER: root
            MYSQL_ALLOW_EMPTY_ROOT_PASSWORD: yes
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_DATABASE: test_database
          options: >-
            --health-cmd="mysqladmin ping --silent"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=3

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo, pdo_mysql, xdebug
          coverage: xdebug

      - name: Creating .env
        run: |
          cd api
          touch .env
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=test_database" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if echo 'SELECT 1' | mysql -h127.0.0.1 -uroot -proot test_database &> /dev/null; then
              break
            fi
            echo 'Waiting for MySQL...'
            sleep 1
          done

      - name: Install Composer dependencies
        run: |
          cd api
          composer install --prefer-dist --no-progress --no-suggest

      - name: Run Database Migrations
        run: |
          cd api
          php artisan migrate --seed

      - name: Run Unit Tests
        run: |
          cd api
          php artisan test

    php-cs-fixer:
      runs-on: ubuntu-latest
      needs:
        - unit-tests

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo, pdo_mysql, xdebug
          coverage: xdebug

      - name: Copy .env.example to .env
        run: |
          cd api
          cp .env.example .env

      - name: Install Composer dependencies
        run: |
          cd api
          composer install --prefer-dist --no-progress --no-suggest

      - name: Run php-cs-fixer
        run: |
          cd api
          vendor/bin/php-cs-fixer check --diff
      
    phplint:
      runs-on: ubuntu-latest
      needs: 
        - unit-tests
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: 8.2
            extensions: mbstring, intl, pdo, pdo_mysql, xdebug
            coverage: xdebug

        - name: Copy .env.example to .env
          run: |
            cd api
            cp .env.example .env

        - name: Install Composer dependencies
          run: |
            cd api
            composer install --prefer-dist --no-progress --no-suggest

        - name: Running PHPLint
          run: |
            cd api
            vendor/bin/phplint --configuration=phplint.json